1. Object.defineProperty(exports, "__esModule", { value: true }); - coding1.js:2 Uncaught ReferenceError: exports is not defined

Ans - bumped into a modules issue. Let’s break it down carefully
Why you see this

-------------That line:

Object.defineProperty(exports, "__esModule", { value: true });


is not written by you — it’s generated by TypeScript or Babel when you compile to CommonJS module format.

In Node.js (CommonJS), you normally have exports and require available.

In the browser, exports does not exist — so you get:

Uncaught ReferenceError: exports is not defined

------------------Where it comes from

When you write TypeScript and compile with default settings, it generates code that assumes CommonJS (Node-style modules).

Example TS:

export const greet = "Hello";


Generated JS (CommonJS):

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.greet = "Hello";

-----------------Fixes
✅ 1. If you want to run in Node.js

No issue — just run with Node (not directly in browser):

node coding1.js


Make sure package.json has:

{
  "type": "commonjs"
}

✅ 2. If you want to run in the browser

Tell TypeScript to generate ES modules instead of CommonJS.

Change tsconfig.json:

{
  "compilerOptions": {
    "module": "esnext",   // or "ES6"
    "target": "es6"
  }
}


Now your code compiles to browser-friendly ES Modules:

export const greet = "Hello";


Then include in HTML:

<script type="module" src="coding1.js"></script>